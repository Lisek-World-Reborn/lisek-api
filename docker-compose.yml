version: '3.8'

volumes:
  pgdata: {}

services:
  db:
    image: postgres:14
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: always
    networks:
      - default
    depends_on:
      - redis
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
      labels:
        - db
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
      labels:
        - redis
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-h",
          "localhost",
          "-p",
          "6379",
          "ping"
        ]
      interval: 10s
      timeout: 5s
      retries: 3
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - "BUILD_ENV=production"
    volumes:
      - ./config.docker.yml:/app/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DATA_DIR=./data/servers/
    ports:
      - "8080:8080"
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
